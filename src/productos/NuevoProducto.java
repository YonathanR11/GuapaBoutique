package productos;

import static Principal.Administrador.tablaProductos;
import Principal.conectar;
import java.awt.Color;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class NuevoProducto extends javax.swing.JDialog {

    /**
     * Creates new form Altaproductos
     */
    public NuevoProducto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(Principal.Administrador.Paneles);
        idproducto.setTransferHandler(null);
        prodnombre.setTransferHandler(null);
        prodcantidad.setTransferHandler(null);
        prodprecio.setTransferHandler(null);
        prodescuento.setTransferHandler(null);
        idcategoria.setTransferHandler(null);
        catnombre.setTransferHandler(null);
        catdescripcion.setTransferHandler(null);
        
    }
    //int contador=0;
    int x,y;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        prodcantidad = new javax.swing.JTextField();
        prodprecio = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        prodescuento = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        idproducto = new javax.swing.JTextField();
        prodnombre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        idcategoria = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        catnombre = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        catdescripcion = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        CheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(197, 29, 116), 3, true));

        prodcantidad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prodcantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prodcantidadKeyTyped(evt);
            }
        });

        prodprecio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prodprecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prodprecioKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("ID del producto:");

        prodescuento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prodescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prodescuentoKeyTyped(evt);
            }
        });

        guardar.setBackground(new java.awt.Color(197, 29, 116));
        guardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        guardar.setForeground(new java.awt.Color(255, 255, 255));
        guardar.setText("Guardar");
        guardar.setContentAreaFilled(false);
        guardar.setFocusPainted(false);
        guardar.setOpaque(true);
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Nombre del producto:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Cantidad del producto:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Precio del producto:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Descuento del producto:");

        idproducto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        idproducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idproductoFocusLost(evt);
            }
        });
        idproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idproductoActionPerformed(evt);
            }
        });
        idproducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idproductoKeyTyped(evt);
            }
        });

        prodnombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prodnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prodnombreKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("ID de la Categoria:");

        idcategoria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        idcategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idcategoriaKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Nombre de la categoria:");

        catnombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        catnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                catnombreKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Descripcion de la categoria:");

        catdescripcion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        catdescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                catdescripcionKeyTyped(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(197, 29, 116));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Cancelar");
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusPainted(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        CheckBox.setBackground(new java.awt.Color(255, 255, 255));
        CheckBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        CheckBox.setText("No cerrar ventana al guardar");
        CheckBox.setContentAreaFilled(false);
        CheckBox.setFocusPainted(false);
        CheckBox.setOpaque(true);

        jPanel2.setBackground(new java.awt.Color(197, 29, 116));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Nuevo Producto");
        jLabel11.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel11MouseDragged(evt);
            }
        });
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel11MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("%");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("$");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Unidades");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guardar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(prodnombre, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                            .addComponent(catnombre)
                            .addComponent(catdescripcion)
                            .addComponent(idproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(prodescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(prodcantidad, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(prodprecio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodprecio, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardar)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CheckBox))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
      //  boolean var;
      
        if (CheckBox.isSelected()) {
        //    var=Guardar();
        Guardar();
        
        }else{
           // Guardar();
         //   var=Guardar();
            if (Guardar()){
                this.dispose();                
            }
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        idproducto.setText("");
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jLabel11MousePressed

    private void jLabel11MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseDragged
        Point mueve = MouseInfo.getPointerInfo().getLocation();
        this.setLocation(mueve.x - x, mueve.y - y);
    }//GEN-LAST:event_jLabel11MouseDragged

    private void prodnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prodnombreKeyTyped
        if (!Character.isLetter(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_prodnombreKeyTyped

    private void prodcantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prodcantidadKeyTyped
        int caracteres=4;
        char c = evt.getKeyChar();
        if(c<'0' || c>'9') evt.consume();
        if(prodcantidad.getText().length()>=caracteres){
           evt.consume();
        }
    }//GEN-LAST:event_prodcantidadKeyTyped

    private void prodprecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prodprecioKeyTyped
       char c = evt.getKeyChar();
        if(((c<'0' || c>'9')) && (c !=KeyEvent.VK_BACK_SPACE) && (c !='.')){
            evt.consume();
        }
    }//GEN-LAST:event_prodprecioKeyTyped

    private void prodescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prodescuentoKeyTyped
        int caracteres=3;
        char c = evt.getKeyChar();
        if(c<'0' || c>'9') evt.consume();
        if(prodescuento.getText().length()>=caracteres){
           evt.consume();
        }
    }//GEN-LAST:event_prodescuentoKeyTyped

    private void idcategoriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idcategoriaKeyTyped
        int caracteres=5;
        char c = evt.getKeyChar();
        if(c<'0' || c>'9') evt.consume();
        if(idcategoria.getText().length()>=caracteres){
           evt.consume();
        }
    }//GEN-LAST:event_idcategoriaKeyTyped

    private void catnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catnombreKeyTyped
        if (!Character.isLetter(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_catnombreKeyTyped

    private void catdescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catdescripcionKeyTyped
        if (!Character.isLetter(evt.getKeyChar())
                && !(evt.getKeyChar() == KeyEvent.VK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_catdescripcionKeyTyped

    private void idproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idproductoActionPerformed
        String sql="SELECT * FROM productos WHERE idproducto='"+idproducto.getText()+"'";
        try{
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                JOptionPane.showMessageDialog(null,"El ID ya existe!"); 
                idproducto.requestFocus();
            }
        } catch (SQLException ex) {
            Logger.getLogger(NuevoProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_idproductoActionPerformed

    private void idproductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idproductoKeyTyped
        int caracteres=13;
        char c = evt.getKeyChar();
        if(c<'0' || c>'9') evt.consume();
        if(idproducto.getText().length()>=caracteres){
           evt.consume();
        }
//        String sql="SELECT * FROM productos WHERE idproducto='"+idproducto.getText()+"'";
//        System.out.println("Palabras: "+idproducto.getText());
//        try{
//            Statement st=cn.createStatement();
//            ResultSet rs=st.executeQuery(sql);
//            boolean encontrado=false;
//            while(rs.next()){
//                encontrado=true;
//                JOptionPane.showMessageDialog(null,"El ID ya existe!");                
////                prodnombre.setEditable(false);
////                prodcantidad.setEditable(false);
////                prodprecio.setEditable(false);            
////                prodescuento.setEditable(false);
////                idcategoria.setEditable(false);
////                catnombre.setEditable(false);
////                catdescripcion.setEditable(false);
////                break;
//            }
////            if (encontrado==false){
////                JOptionPane.showMessageDialog(null,"ID Disponible!");
////                prodnombre.setEditable(true);
////                prodcantidad.setEditable(true);
////                prodprecio.setEditable(true);            
////                prodescuento.setEditable(true);
////                idcategoria.setEditable(true);
////                catnombre.setEditable(true);
////                catdescripcion.setEditable(true);
////            }
//        } catch (SQLException ex) {
//            Logger.getLogger(NuevoProducto.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_idproductoKeyTyped

    private void idproductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idproductoFocusLost
        String sql="SELECT * FROM productos WHERE idproducto='"+idproducto.getText()+"'";
        try{
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                JOptionPane.showMessageDialog(null,"El ID ya existe!"); 
                idproducto.requestFocus();
                idproducto.setText("");
            }
        } catch (SQLException ex) {
            Logger.getLogger(NuevoProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_idproductoFocusLost

    
    public boolean Guardar(){
        boolean a = false;
        
        /*String cadena=idproducto.getText();
        Pattern pat = Pattern.compile("[0-9]{13}$");
        Matcher mat = pat.matcher(cadena);
        if (mat.matches()) {
            idproducto.setBackground(Color.white);
            id.setText(" ");
            contador=contador+1;
        } else {
            idproducto.setBackground(Color.pink);                    
            id.setText("Debe contener 13 numeros");
            id.setForeground(Color.red);  
     }
        
        String cadena2=prodnombre.getText();
        Pattern pat2 = Pattern.compile("[A-Z]?[a-zñ[áéíóú]?]+(([\\s][A-Z]?[a-zñ[áéíóú]?]+)?)+$");
        Matcher mat2 = pat2.matcher(cadena2);
        if (mat2.matches()) {
            prodnombre.setBackground(Color.white);
            nombre.setText(" ");
            contador=contador+1;
        } else {
            prodnombre.setBackground(Color.pink);
            nombre.setText("Debe contener solo letras y espacios opcionales");
            nombre.setForeground(Color.red);            
     }
        
        String cadena3=prodcantidad.getText();
        Pattern pat3 = Pattern.compile("[0-9]{1,4}$");
        Matcher mat3 = pat3.matcher(cadena3);
        if (mat3.matches()) {
            prodcantidad.setBackground(Color.white);
            cantidad.setText(" ");
            contador=contador+1;
        } else {
            prodcantidad.setBackground(Color.pink);
            cantidad.setText("Deben ser solo numeros no mayores a 4 digitos");        
            cantidad.setForeground(Color.red);
     }
        
        String cadena4=prodprecio.getText();
        Pattern pat4 = Pattern.compile("([0-9]{1,5}([.][0-9]{1,2})?)$");
        Matcher mat4 = pat4.matcher(cadena4);
        if (mat4.matches()) {
            prodprecio.setBackground(Color.white);
            precio.setText(" ");
            contador=contador+1;
        } else {
            prodprecio.setBackground(Color.pink);
            precio.setText("Deben ser solo numeros y puede llevar punto decimal"); 
            precio.setForeground(Color.red);
     }
      
        String cadena5=prodescuento.getText();
       // Pattern pat5 = Pattern.compile("[0-9]+([.][0-9]+)?$");
        Matcher mat5 = pat4.matcher(cadena5);
        if (mat5.matches()) {
            prodescuento.setBackground(Color.white);
            descuento.setText(" ");
            contador=contador+1;
        } else {
            prodescuento.setBackground(Color.pink);
            descuento.setText("Deben ser solo numeros y puede llevar punto decimal");
            descuento.setForeground(Color.red);
     }
        
       /* String cadena6=prodstock.getText(); ////////////////////////////////////
        Pattern pat6 = Pattern.compile("[0-9]+$");
        Matcher mat6 = pat6.matcher(cadena6);
        if (mat6.matches()) {
            prodstock.setForeground(Color.green);
        } else {
            prodstock.setForeground(Color.red);
     }*/
        
      /*  String cadena7=prodexistencia.getText();
        Pattern pat7 = Pattern.compile("[0-9]+$");
        Matcher mat7 = pat7.matcher(cadena7);
        if (mat7.matches()) {
            prodexistencia.setForeground(Color.green);
        } else {
            prodexistencia.setForeground(Color.red);
     }*//////////////////////////////////////////////////////////////////
        
       /* String cadena8=idcategoria.getText();
        Pattern pat8 = Pattern.compile("[a-z0-9ñ]{5}$");
        Matcher mat8 = pat8.matcher(cadena8);
        if (mat8.matches()) {
            idcategoria.setBackground(Color.white);
            idcat.setText(" ");
            contador=contador+1;
        } else {
            idcategoria.setBackground(Color.pink);
            idcat.setText("Debe llevar 5 digitos, pueden ser numeros y letras numeros");
            idcat.setForeground(Color.red);
     }
      
        String cadena9=catnombre.getText();
       // Pattern pat9 = Pattern.compile("[a-zñ[áéíóú]?]+$");
        Matcher mat9 = pat2.matcher(cadena9);
        if (mat9.matches()) {
            catnombre.setBackground(Color.white);
            nombrecat.setText(" ");
            contador=contador+1;
        } else {
            catnombre.setBackground(Color.pink);
            nombrecat.setText("Debe contener solo letras y espacios opcionales");
            nombrecat.setForeground(Color.red);
     }
        
        String cadena10=catdescripcion.getText();
      //  Pattern pat10 = Pattern.compile("[a-zñ[áéíóú]?]+$");
        Matcher mat10 = pat2.matcher(cadena10);
        if (mat10.matches()) {
            catdescripcion.setBackground(Color.white);
            descripcioncat.setText(" ");
            contador=contador+1;
        } else {
            catdescripcion.setBackground(Color.pink);
            descripcioncat.setText("Debe contener solo letras y espacios opcionales");
            descripcioncat.setForeground(Color.red);
     }*/
        //if(contador==0){  
        try{
            PreparedStatement comando = cn.prepareStatement("INSERT INTO productos (idproducto,prodnombre,prodcantidad,prodprecio,prodescuento,prodexistencia,idcategoria,catnombre,catdescripcion)VALUES(?,?,?,?,?,?,?,?,?)");
            comando.setString(1, idproducto.getText());      
            comando.setString(2, prodnombre.getText());
            comando.setString(3, prodcantidad.getText());
            comando.setString(4, prodprecio.getText());
            comando.setString(5, prodescuento.getText());  
            //comando.setString(6, prodexistencia.getText());
            comando.setString(6, prodcantidad.getText());
            comando.setString(7, idcategoria.getText());
            comando.setString(8, catnombre.getText());
            comando.setString(9, catdescripcion.getText());
            comando.executeUpdate();
            JOptionPane.showMessageDialog(null,"Guardado Correctamente!");
            idproducto.setText("");
            prodnombre.setText("");
            prodcantidad.setText("");
            prodprecio.setText("");
            prodescuento.setText("");
            //prodexistencia.setText("");
            idcategoria.setText("");
            catnombre.setText("");
            catdescripcion.setText("");
            a=true;
        }catch (java.sql.SQLException e){
            /*prodprecio.setBackground(Color.pink);
            precio.setText("Deben ser solo numeros y puede llevar punto decimal"); 
            precio.setForeground(Color.red);*/
            JOptionPane.showMessageDialog(null,"ERROR AL GUARDAR PRODUCTO!");             
            System.out.println("ERROR AL GUARDAR PRODUCTO: "+e);
        }
       // }else{            
         //   JOptionPane.showMessageDialog(null,"ERROR AL GUARDAR PRODUCTO!");
           // a=false;         
        //}       
                try {
            DefaultTableModel modelo = (DefaultTableModel) tablaProductos.getModel();
            int filas = tablaProductos.getRowCount();
            for (int i = 0; filas > i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            System.out.println("ERROR: "+e);
        }
        productos.tablaproducto ver = new productos.tablaproducto();
        ver.mostrardato();
        return a;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NuevoProducto dialog = new NuevoProducto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
        conectar cc= new conectar();
        Connection cn=cc.conexion();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBox;
    private javax.swing.JTextField catdescripcion;
    private javax.swing.JTextField catnombre;
    private javax.swing.JButton guardar;
    private javax.swing.JTextField idcategoria;
    private javax.swing.JTextField idproducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField prodcantidad;
    private javax.swing.JTextField prodescuento;
    private javax.swing.JTextField prodnombre;
    private javax.swing.JTextField prodprecio;
    // End of variables declaration//GEN-END:variables
}
